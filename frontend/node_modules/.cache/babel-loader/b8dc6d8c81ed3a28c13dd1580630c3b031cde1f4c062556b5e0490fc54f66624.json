{"ast":null,"code":"import axios from 'axios';\n\n// API base URL - will be set by environment or default to localhost:8000\nconst API_BASE = process.env.REACT_APP_API_URL || (window.location.hostname === 'localhost' ? 'http://localhost:8000' // Use direct connection to localhost:8000\n: '/api'); // Use nginx proxy when not localhost\n\nconst api = axios.create({\n  baseURL: API_BASE,\n  timeout: 30000\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  // console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  // console.log(`API Response: ${response.status} ${response.config.url}`);\n  return response;\n}, error => {\n  var _error$response, _error$config, _error$response2;\n  console.error(`API Error: ${(_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status} ${(_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url}`, (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  return Promise.reject(error);\n});\nexport const apiService = {\n  // Upload file\n  uploadFile: async (file, preset = 'mobile_complete', deviceTypes = null, callbackUrl = null) => {\n    const formData = new FormData();\n    formData.append('video', file);\n    formData.append('preset', preset);\n    if (deviceTypes) formData.append('device_types', deviceTypes);\n    if (callbackUrl) formData.append('callback_url', callbackUrl);\n    const response = await api.post('/transcode/mobile', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // Upload from URL\n  uploadFromUrl: async (mediaUrl, profiles, callbackUrl = null) => {\n    const response = await api.post('/transcode/url', {\n      media_url: mediaUrl,\n      config: {\n        profiles\n      },\n      callback_url: callbackUrl\n    });\n    return response.data;\n  },\n  // Get all tasks\n  getTasks: async (status = null, limit = 50) => {\n    const params = {\n      limit\n    };\n    if (status) params.status = status;\n    const response = await api.get('/tasks', {\n      params\n    });\n    return response.data;\n  },\n  // Get single task\n  getTask: async taskId => {\n    const response = await api.get(`/task/${taskId}`);\n    return response.data;\n  },\n  // Delete task\n  deleteTask: async (taskId, deleteFiles = false, deleteFaces = false) => {\n    const response = await api.delete(`/task/${taskId}`, {\n      params: {\n        delete_files: deleteFiles,\n        delete_faces: deleteFaces\n      }\n    });\n    return response.data;\n  },\n  // Retry task\n  retryTask: async (taskId, deleteFiles = false) => {\n    const response = await api.post(`/task/${taskId}/retry`, {}, {\n      params: {\n        delete_files: deleteFiles\n      }\n    });\n    return response.data;\n  },\n  // Get available profiles\n  getProfiles: async () => {\n    const response = await api.get('/profiles');\n    return response.data;\n  },\n  // Health check\n  health: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  },\n  // Get task result for copying/callback\n  getTaskResult: async taskId => {\n    const response = await api.get(`/task/${taskId}/result`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE","process","env","REACT_APP_API_URL","window","location","hostname","api","create","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","response","_error$response","_error$config","_error$response2","console","status","url","data","apiService","uploadFile","file","preset","deviceTypes","callbackUrl","formData","FormData","append","post","headers","uploadFromUrl","mediaUrl","profiles","media_url","callback_url","getTasks","limit","params","get","getTask","taskId","deleteTask","deleteFiles","deleteFaces","delete","delete_files","delete_faces","retryTask","getProfiles","health","getTaskResult"],"sources":["/Users/quang/Documents/skl-workspace/transcode/media-transcode/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\n// API base URL - will be set by environment or default to localhost:8000\nconst API_BASE = process.env.REACT_APP_API_URL || \n  (window.location.hostname === 'localhost' \n    ? 'http://localhost:8000' // Use direct connection to localhost:8000\n    : '/api'); // Use nginx proxy when not localhost\n\nconst api = axios.create({\n  baseURL: API_BASE,\n  timeout: 30000,\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    // console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    // console.log(`API Response: ${response.status} ${response.config.url}`);\n    return response;\n  },\n  (error) => {\n    console.error(`API Error: ${error.response?.status} ${error.config?.url}`, error.response?.data);\n    return Promise.reject(error);\n  }\n);\n\nexport const apiService = {\n  // Upload file\n  uploadFile: async (file, preset = 'mobile_complete', deviceTypes = null, callbackUrl = null) => {\n    const formData = new FormData();\n    formData.append('video', file);\n    formData.append('preset', preset);\n    if (deviceTypes) formData.append('device_types', deviceTypes);\n    if (callbackUrl) formData.append('callback_url', callbackUrl);\n\n    const response = await api.post('/transcode/mobile', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  // Upload from URL\n  uploadFromUrl: async (mediaUrl, profiles, callbackUrl = null) => {\n    const response = await api.post('/transcode/url', {\n      media_url: mediaUrl,\n      config: { profiles },\n      callback_url: callbackUrl,\n    });\n    return response.data;\n  },\n\n  // Get all tasks\n  getTasks: async (status = null, limit = 50) => {\n    const params = { limit };\n    if (status) params.status = status;\n    \n    const response = await api.get('/tasks', { params });\n    return response.data;\n  },\n\n  // Get single task\n  getTask: async (taskId) => {\n    const response = await api.get(`/task/${taskId}`);\n    return response.data;\n  },\n\n  // Delete task\n  deleteTask: async (taskId, deleteFiles = false, deleteFaces = false) => {\n    const response = await api.delete(`/task/${taskId}`, {\n      params: { \n        delete_files: deleteFiles,\n        delete_faces: deleteFaces\n      }\n    });\n    return response.data;\n  },\n\n  // Retry task\n  retryTask: async (taskId, deleteFiles = false) => {\n    const response = await api.post(`/task/${taskId}/retry`, {}, {\n      params: { delete_files: deleteFiles }\n    });\n    return response.data;\n  },\n\n  // Get available profiles\n  getProfiles: async () => {\n    const response = await api.get('/profiles');\n    return response.data;\n  },\n\n  // Health check\n  health: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  },\n\n  // Get task result for copying/callback\n  getTaskResult: async (taskId) => {\n    const response = await api.get(`/task/${taskId}/result`);\n    return response.data;\n  },\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,KAC3CC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,GACrC,uBAAuB,CAAC;AAAA,EACxB,MAAM,CAAC,CAAC,CAAC;;AAEf,MAAMC,GAAG,GAAGR,KAAK,CAACS,MAAM,CAAC;EACvBC,OAAO,EAAET,QAAQ;EACjBU,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV;EACA,OAAOA,MAAM;AACf,CAAC,EACAC,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAR,GAAG,CAACI,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC1BK,QAAQ,IAAK;EACZ;EACA,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAI,eAAA,EAAAC,aAAA,EAAAC,gBAAA;EACTC,OAAO,CAACP,KAAK,CAAC,eAAAI,eAAA,GAAcJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBI,MAAM,KAAAH,aAAA,GAAIL,KAAK,CAACD,MAAM,cAAAM,aAAA,uBAAZA,aAAA,CAAcI,GAAG,EAAE,GAAAH,gBAAA,GAAEN,KAAK,CAACG,QAAQ,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBI,IAAI,CAAC;EAChG,OAAOT,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMW,UAAU,GAAG;EACxB;EACAC,UAAU,EAAE,MAAAA,CAAOC,IAAI,EAAEC,MAAM,GAAG,iBAAiB,EAAEC,WAAW,GAAG,IAAI,EAAEC,WAAW,GAAG,IAAI,KAAK;IAC9F,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,IAAI,CAAC;IAC9BI,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEL,MAAM,CAAC;IACjC,IAAIC,WAAW,EAAEE,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEJ,WAAW,CAAC;IAC7D,IAAIC,WAAW,EAAEC,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEH,WAAW,CAAC;IAE7D,MAAMb,QAAQ,GAAG,MAAMX,GAAG,CAAC4B,IAAI,CAAC,mBAAmB,EAAEH,QAAQ,EAAE;MAC7DI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOlB,QAAQ,CAACO,IAAI;EACtB,CAAC;EAED;EACAY,aAAa,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,EAAER,WAAW,GAAG,IAAI,KAAK;IAC/D,MAAMb,QAAQ,GAAG,MAAMX,GAAG,CAAC4B,IAAI,CAAC,gBAAgB,EAAE;MAChDK,SAAS,EAAEF,QAAQ;MACnBxB,MAAM,EAAE;QAAEyB;MAAS,CAAC;MACpBE,YAAY,EAAEV;IAChB,CAAC,CAAC;IACF,OAAOb,QAAQ,CAACO,IAAI;EACtB,CAAC;EAED;EACAiB,QAAQ,EAAE,MAAAA,CAAOnB,MAAM,GAAG,IAAI,EAAEoB,KAAK,GAAG,EAAE,KAAK;IAC7C,MAAMC,MAAM,GAAG;MAAED;IAAM,CAAC;IACxB,IAAIpB,MAAM,EAAEqB,MAAM,CAACrB,MAAM,GAAGA,MAAM;IAElC,MAAML,QAAQ,GAAG,MAAMX,GAAG,CAACsC,GAAG,CAAC,QAAQ,EAAE;MAAED;IAAO,CAAC,CAAC;IACpD,OAAO1B,QAAQ,CAACO,IAAI;EACtB,CAAC;EAED;EACAqB,OAAO,EAAE,MAAOC,MAAM,IAAK;IACzB,MAAM7B,QAAQ,GAAG,MAAMX,GAAG,CAACsC,GAAG,CAAC,SAASE,MAAM,EAAE,CAAC;IACjD,OAAO7B,QAAQ,CAACO,IAAI;EACtB,CAAC;EAED;EACAuB,UAAU,EAAE,MAAAA,CAAOD,MAAM,EAAEE,WAAW,GAAG,KAAK,EAAEC,WAAW,GAAG,KAAK,KAAK;IACtE,MAAMhC,QAAQ,GAAG,MAAMX,GAAG,CAAC4C,MAAM,CAAC,SAASJ,MAAM,EAAE,EAAE;MACnDH,MAAM,EAAE;QACNQ,YAAY,EAAEH,WAAW;QACzBI,YAAY,EAAEH;MAChB;IACF,CAAC,CAAC;IACF,OAAOhC,QAAQ,CAACO,IAAI;EACtB,CAAC;EAED;EACA6B,SAAS,EAAE,MAAAA,CAAOP,MAAM,EAAEE,WAAW,GAAG,KAAK,KAAK;IAChD,MAAM/B,QAAQ,GAAG,MAAMX,GAAG,CAAC4B,IAAI,CAAC,SAASY,MAAM,QAAQ,EAAE,CAAC,CAAC,EAAE;MAC3DH,MAAM,EAAE;QAAEQ,YAAY,EAAEH;MAAY;IACtC,CAAC,CAAC;IACF,OAAO/B,QAAQ,CAACO,IAAI;EACtB,CAAC;EAED;EACA8B,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,MAAMrC,QAAQ,GAAG,MAAMX,GAAG,CAACsC,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAO3B,QAAQ,CAACO,IAAI;EACtB,CAAC;EAED;EACA+B,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,MAAMtC,QAAQ,GAAG,MAAMX,GAAG,CAACsC,GAAG,CAAC,SAAS,CAAC;IACzC,OAAO3B,QAAQ,CAACO,IAAI;EACtB,CAAC;EAED;EACAgC,aAAa,EAAE,MAAOV,MAAM,IAAK;IAC/B,MAAM7B,QAAQ,GAAG,MAAMX,GAAG,CAACsC,GAAG,CAAC,SAASE,MAAM,SAAS,CAAC;IACxD,OAAO7B,QAAQ,CAACO,IAAI;EACtB;AACF,CAAC;AAED,eAAelB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}